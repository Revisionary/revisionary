version: "3.2"

services:
    proxy:
        image: nginx:latest
        container_name: revisionary_proxy
        restart: "always"
        depends_on:
            - landing
            - backend
            - dashboard
        env_file:
            - ./.env
        ports:
            - ${LOCAL_IP}:80:80
            - ${LOCAL_IP}:443:443
        volumes:
            - ./proxy/nginx.conf:/etc/nginx/conf.d/nginx.conf
            - ./proxy/certificates:/etc/ssl/private
            - ./proxy/logs:/var/log/nginx
            - ./backend/src:/backend
        command: sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\" < /etc/nginx/conf.d/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        networks:
            - proxy-network
            - backend-network

    landing:
        build: ./landing
        container_name: revisionary_landing
        restart: "always"
        volumes:
            - ./landing/src:/landing/src
        command: "npm run dev"
        networks:
            - proxy-network
        environment:
            HOST: 0.0.0.0
            PORT: 3030

    dashboard:
        build: ./dashboard
        container_name: revisionary_dashboard
        restart: "always"
        depends_on:
            - backend
        volumes:
            - ./dashboard/src:/dashboard/src
        command: "npm run dev"
        networks:
            - backend-network
        environment:
            HOST: 0.0.0.0
            PORT: 3000

    backend:
        build: ./backend
        container_name: revisionary_backend
        restart: "always"
        depends_on:
            - memcached
            - database
        env_file:
            - ./.env
        volumes:
            - ./backend/src/app:/backend/app
            - ./backend/src/assets:/backend/assets
            - ./backend/src/cache:/backend/cache
            - ./backend/src/index.php:/backend/index.php
            #- ./backend/src/.htaccess:/backend/.htaccess
            - ./backend/logs:/var/log
        networks:
            - backend-network

    memcached:
        image: memcached:latest
        container_name: revisionary_memcached
        restart: "on-failure"
        command: ["-m", "512m"]
        networks:
            - backend-network

    database:
        image: mysql:latest
        container_name: revisionary_database
        restart: "on-failure"
        command: [
                "--character-set-server=utf8mb4",
                "--collation-server=utf8mb4_unicode_ci",
                "--slow_query_log=ON", # Make this off when in production !!!
                "--long_query_time=2",
                "--slow_query_log_file=/var/lib/mysql/mysql/slow_queries.log",
            ]
        environment:
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        volumes:
            - ./database/dump:/docker-entrypoint-initdb.d
            - ./database/mysql:/var/lib/mysql
        networks:
            - backend-network

    chrome:
        build: ./chrome
        container_name: revisionary_chrome
        restart: "unless-stopped"
        ports:
            - ${LOCAL_IP}:8080:3000
        volumes:
            - ./chrome/src:/chrome/src
            - ./backend/src/cache:/chrome/cache
        networks:
            - backend-network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        container_name: revisionary_phpmyadmin
        depends_on:
            - database
        ports:
            - ${LOCAL_IP}:8000:80
        volumes:
            - ./backend/config/phpmyadmin.ini:/usr/local/etc/php/conf.d/uploads.ini
        environment:
            PMA_HOSTS: ${DB_HOST}, ${DB_CLOUD_HOST}
            PMA_PORTS: ${DB_PORT}, ${DB_CLOUD_PORT}
            PMA_VERBOSES: Docker, Cloud
        networks:
            - backend-network

    memcachedadmin:
        build: ./memcachedadmin
        container_name: revisionary_memcachedadmin
        restart: "unless-stopped"
        depends_on:
            - memcached
        ports:
            - ${LOCAL_IP}:1200:80
        volumes:
            - ./memcachedadmin/Memcache.docker.php:/var/www/localhost/htdocs/Config/Memcache.php
        networks:
            - backend-network

networks:
    proxy-network:
        driver: bridge
    backend-network:
        driver: bridge
