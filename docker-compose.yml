version: "3.8"

services:
    proxy:
        image: nginx:latest
        container_name: revisionary_proxy
        restart: "always"
        env_file:
            - ./.env
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./proxy/templates/:/etc/nginx/templates/
            - ./proxy/common:/etc/nginx/common
            - ./proxy/certificates/:/etc/nginx/certificates/
            - ./proxy/logs:/var/log/nginx
        networks:
            - proxy-network
            - backend-network

    backend:
        extends:
            file: ./backend/docker-compose.yml
            service: backend
        env_file:
            - .env
        volumes:
            - ./backend/src/cache:/backend/cache
            # - ./backend/src/app:/backend/app
            # - ./backend/src/assets:/backend/assets
            # - ./backend/src/index.php:/backend/index.php

    memcached:
        extends:
            file: ./backend/docker-compose.yml
            service: memcached

    database:
        extends:
            file: ./backend/docker-compose.yml
            service: database

    chrome:
        extends:
            file: ./chrome/docker-compose.yml
            service: chrome

    dashboard:
        extends:
            file: ./dashboard/docker-compose.yml
            service: dashboard
        environment:
            API_ENDPOINT: https://${API_SUBDOMAIN}.${API_DOMAIN}/v1/
            # HOST: 0.0.0.0
            # PORT: 3000

    # landing:
    #     build:
    #         context: ./landing
    #         dockerfile: Dockerfile-production
    #     image: revisionary_landing:latest
    #     container_name: revisionary_landing
    #     restart: "always"
    #     volumes:
    #         - ./landing/src:/landing/src
    #     command: "npm run start"
    #     networks:
    #         - proxy-network
    #     environment:
    #         HOST: 0.0.0.0
    #         PORT: 3030

    # phpmyadmin:
    #     image: phpmyadmin/phpmyadmin:latest
    #     container_name: revisionary_phpmyadmin
    #     restart: "unless-stopped"
    #     ports:
    #         - 8000:80
    #     environment:
    #         PMA_HOSTS: ${DB_HOST}, ${DB_CLOUD_HOST}
    #         PMA_PORTS: ${DB_PORT}, ${DB_CLOUD_PORT}
    #         PMA_VERBOSES: Docker, Cloud
    #     networks:
    #         - backend-network

networks:
    proxy-network: {}
    backend-network: {}

volumes:
    mysql: {}
